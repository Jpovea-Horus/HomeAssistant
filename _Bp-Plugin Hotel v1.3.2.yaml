blueprint:
  name: Bp-Plugin Hotel v1.3.2
  description: |
    Automatización para gestionar ocupación en una habitación (ej. hotel). Controla switches y termostatos según sensores de puerta y movimiento.
    Asegúrate de configurar:
    Los input_select con las opciones exactas:
    - state_plugin: 'libre', 'ocupado'
    - state_internal: 'libre', 'ocupado', 'scan', 'puertAbierta'
    - mode_plugin: 'auto', 'manual'

    Los input_boolean con las opciones exactas (on/off):
    - ModoPlg: Modo Plugin
    - ModoAct: Modo Actuadores On
    - ModoThermo: Modo Thermostat
    - ModoPuertAb: Modo Puerta Abierta Inicial
    - ModoSetPointOff: Modo Set Point Off

    Si estas opciones no están configuradas correctamente, la automatización puede no funcionar como se espera.
    
  domain: automation
  input:
    door_sensor: #Sensor de Puerta
      name: Sensor de Puerta
      description: Sensor que detecta la apertura/cierre de la puerta (solo sensores)
      selector:
        entity:
          domain: binary_sensor
          multiple: true
    motion_sensor: #Sensor de Movimiento
      name: Sensor de Movimiento
      description: Sensor que detecta movimiento para determinar ocupación (solo sensores)
      selector:
        entity:
          domain: binary_sensor
          multiple: true
    target_switchesOn: #Actuadores a Encender
      name: Switches a Encender
      description: Lista de Actuadores que se encenderán al iniciar y apagarán al pasar a libre según ocupación (solo Actuadores)
      default: []
      selector:
        entity:
          domain: switch
          multiple: true
    target_switchesOff: #Actuadores a Apagar
      name: Switches a Apagar
      description: Lista de switches que se apagarán cuando el estado sea libre (solo Actuadores)
      default: []
      selector:
        entity:
          domain: switch
          multiple: true
    target_climates: #Termostatos a Encender
      name: Termostatos a Encender
      description: Lista de termostatos que se configurarán según ocupación (solo Thermostatos)
      default: []
      selector:
        entity:
          domain: climate
          multiple: true
    state_plugin: #Estado del Plugin
      name: Estado del Plugin
      description: Input Select (Variable Auxiliar) para el estado del plugin (libre/ocupado). Debe tener opciones 'libre' y 'ocupado'.
      selector:
        entity:
          domain: input_select
    state_internal: #Estado de la Ocupacíon
      name: Estado Interno
      description: Input Select (Variable Auxiliar) para los estadoas internos (libre/ocupado/scan/puertAbierta). Debe tener estas opciones.
      selector:
        entity:
          domain: input_select
    mode_plugin: #Modos del plugin principal
      name: Modo del Plugin
      description: Input Select (Variable Auxiliar) para el modo del plugin (auto/manual). Debe tener opciones 'auto' y 'manual'.
      selector:
        entity:
          domain: input_select
    mode_activation: #Actuadores On
      name: Modo de Activación Actuadores
      description: Input Boolean (Variable Auxiliar) habilita/deshabilita la activación de switches (Actuadores) al iniciar ocupación
      selector:
        entity:
          domain: input_boolean
    mode_puertAb: #Puerta Abierta On
      name: Modo de Activación Modo Puerta Abierta (>= Min)
      description: Input Boolean (Variable Auxiliar) habilita/deshabilita el apagado de AA (si (state_internal == puertAbierta >= delay_puertAb)) 
      selector:
        entity:
          domain: input_boolean
    mode_thermostat: #Modo Thermo inicial
      name: Modo de Termostato
      description: Input Boolean (Variable Auxiliar) habilita/deshabilita el control del termostato al iniciar ocupación
      selector:
        entity:
          domain: input_boolean
    temperature_SetPointOn:
      name: Temperatura SetPointOn
      description: Temperatura a establecer cuando los termostatos se encienden al iniciar ocupación si mode_thermostat == On
      default: 24
      selector:
        number:
          min: 16
          max: 30
          unit_of_measurement: "°C"
    fanMode_SetPointOn:
      name: Modo de Ventilador SetPointOn
      description: Modo de ventilador para los termostatos al iniciar ocupación
      default: Auto low
      selector:
        select:
          options:
            - Auto low
            - Low
            - Medium
            - High
    mode_Setpointoff: #Modo Thermo continua encendido pero a una temperatura determinada
      name: Modo de SetPointOff
      description: Input Boolean (Variable Auxiliar) habilita/deshabilita el control del SetPointOff al Apagar ocupación
      selector:
        entity:
          domain: input_boolean
    temperature_SetPointOff:
      name: Temperatura SetPointOff
      description: Temperatura a establecer cuando los termostatos se encienden al apagar ocupación si mode_Setpointoff == On
      default: 27
      selector:
        number:
          min: 16
          max: 30
          unit_of_measurement: "°C"
    fanMode_SetPointOff:
      name: Modo de Ventilador
      description: Modo de ventilador para los termostatos al apagar ocupación
      default: Low
      selector:
        select:
          options:
            - Auto low
            - Low
            - Medium
            - High
    delay_off:
      name: Retardo Apagar
      description: Tiempo de espera antes de apagar los equipos tras inactividad y pasar a libre el plg
      default: 15
      selector:
        number:
          min: 1
          max: 60
          unit_of_measurement: minutes
    delay_scan:
      name: Retardo de Scan al SM
      description: Tiempo de espera para escanear si el sensor de movimiento está activo
      default: 5
      selector:
        number:
          min: 1
          max: 60
          unit_of_measurement: minutes
    delay_switch:
      name: Retardo de Switches
      description: Tiempo de espera antes de apagar switches si están encendidos en estado libre
      default: 10
      selector:
        number:
          min: 1
          max: 60
          unit_of_measurement: minutes
    delay_puertAb:
      name: Retardo para Apagar AA
      description: Tiempo de espera por puerta abierta on para apagar los AA
      default: 5
      selector:
        number:
          min: 1
          max: 60
          unit_of_measurement: minutes


variables:
  delay_off: !input delay_off
  delay_switch: !input delay_switch
  delay_scan: !input delay_scan
  delay_puertAb: !input delay_puertAb


trigger:
- trigger: state #Door_Open
  entity_id: !input door_sensor
  to: "on"
  id: ID_puertAb
  
- trigger: state #Door_Closer
  entity_id: !input door_sensor
  to: "off"
  id: ID_scan
  
- trigger: state #Motion On
  entity_id: !input motion_sensor
  to: "on"
  id: ID_ocupado
  
- trigger: state #Stados internos Scan
  entity_id: !input state_internal
  to: scan
  for:
    minutes: !input delay_scan
  id: ID_ocupadoSM
  
- trigger: state #Estados Internos Scan tiempo = (delay_off)
  entity_id: !input state_internal
  to: scan
  for:
    minutes: !input delay_off
  id: ID_apagar
  from: puertAbierta

- trigger: state #Estados Internos puertAb >> delay_puertAb >> Off AA
  entity_id: !input state_internal
  to: puertAbierta
  for:
    minutes: !input delay_puertAb
  id: ID_puertAbTime

- trigger: state #Estados Internos puertAb >> delay_off >> Libre "_________Test________"
  entity_id: !input state_internal
  to: puertAbierta
  for:
    minutes: !input delay_off
  id: ID_puertAbTime
  
- trigger: state #Estados Internos Scan tiempo = (delay_switch) accionado por sw On/off
  entity_id: !input state_internal
  to: scan
  for:
    minutes: !input delay_switch
  id: ID_apagar
  from: libre
  
- trigger: state #Estados del plugin pasa de ocupado a libre >> apagar todo (Web)
  entity_id: !input state_plugin
  from: ocupado
  to: libre
  id: ID_apagar
  
- trigger: state #Sw on/off de libre a scan
  entity_id: !input target_switchesOn
  from: "off"
  to: "on"
  for:
    seconds: 2
  id: ID_SwOn

# condition: []

action:
  - choose:
      - conditions: #Scena Encender SDoor libre a ocup
          - condition: state
            entity_id: !input state_plugin
            state: libre
          - condition: trigger
            id: ID_puertAb
        sequence:
          - action: input_select.select_option
            data:
              option: puertAbierta
            target:
              entity_id: !input state_internal
          - action: input_select.select_option
            data:
              option: ocupado
            target:
              entity_id: !input state_plugin
          - if: #si mode_plugin = auto >> All = ON
              - condition: state
                entity_id: !input mode_plugin
                state: auto
            then:
              - if: #si mode_activation = ON >> SW = ON
                  - condition: state
                    entity_id: !input mode_activation
                    state: "on"
                then:
                  - action: switch.turn_on
                    target:
                      entity_id: !input target_switchesOn
              - if: #si mode_thermostat = ON >> thermostat = ON
                  - condition: state
                    entity_id: !input mode_thermostat
                    state: "on"
                then:
                  - action: climate.set_temperature
                    data:
                      hvac_mode: cool
                      temperature: !input temperature_SetPointOn
                    target:
                      entity_id: !input target_climates

                  - action: climate.set_fan_mode
                    # metadata: {}
                    data:
                      fan_mode: !input fanMode_SetPointOn
                    target:
                      entity_id: !input target_climates
        alias: Scena_Encender_SDoor_libre_a_ocup

      - conditions: #Scena Encender SMov libre a scan
          - condition: state
            entity_id: !input state_internal
            state: libre
          - condition: trigger
            id: ID_ocupado
        sequence:
          - action: input_select.select_option
            data:
              option: scan
            target:
              entity_id: !input state_internal
          - action: input_select.select_option
            data:
              option: ocupado
            target:
              entity_id: !input state_plugin
          - if: #si mode_plugin = auto >> All = ON
              - condition: state
                entity_id: !input mode_plugin
                state: auto
            then:
              - if: #si mode_activation = on >> swOn = ON
                  - condition: state
                    entity_id: !input mode_activation
                    state: "on"
                then:
                  - action: switch.turn_on
                    target:
                      entity_id: !input target_switchesOn
              - if: #si mode_thermostat = ON >> thermostat = ON
                  - condition: state
                    entity_id: !input mode_thermostat
                    state: "on"
                then:
                  - action: climate.set_temperature
                    data:
                      hvac_mode: cool
                      temperature: !input temperature_SetPointOn
                    target:
                      entity_id: !input target_climates
                      
                  - action: climate.set_fan_mode
                    # metadata: {}
                    data:
                      fanMode_SetPointOn: !input fanMode_SetPointOn
                    target:
                      entity_id: !input target_climates
        alias: Scena_Encender_SMov_libre_a_scan

      - conditions: #Scena SW libre a scan
          - condition: state
            entity_id: !input state_plugin
            state: libre
          - condition: trigger
            id: ID_SwOn
        sequence:
          - action: input_select.select_option
            data:
              option: scan
            target:
              entity_id: !input state_internal
          - action: input_select.select_option
            data:
              option: ocupado
            target:
              entity_id: !input state_plugin
        alias: Scena_SW_libre_a_scan

      - conditions: #Scena puertAb a scan
          - condition: state
            entity_id: !input state_internal
            state: puertAbierta
          - condition: trigger
            id: ID_scan
        sequence:
          - action: input_select.select_option
            data:
              option: scan
            target:
              entity_id: !input state_internal
        alias: Scena_puertAb_a_scan

      - conditions: #Scena scan a ocup
          - condition: state
            entity_id: !input state_internal
            state: scan
          - condition: trigger
            id: ID_ocupado
        sequence:
          - action: input_select.select_option
            data:
              option: ocupado
            target:
              entity_id: !input state_internal
        alias: Scena_scan_a_ocup

      - conditions: #Scena SMtimer scan a ocup
          - condition: trigger
            id: ID_ocupadoSM
          - condition: state
            entity_id: !input motion_sensor
            state: "on"
        sequence:
          - action: input_select.select_option
            data:
              option: ocupado
            target:
              entity_id: !input state_internal
        alias: Scena_SMtimer_scan_a_ocup

      - conditions: #Scena ocup a puertAb by SDoor
          - condition: state
            entity_id: !input state_internal
            state: ocupado
          - condition: trigger
            id: ID_puertAb
        sequence:
          - action: input_select.select_option
            data:
              option: puertAbierta
            target:
              entity_id: !input state_internal
        alias: Scena_ocup_a_puertAb

      - conditions: #Scena scan a puertAb by SDoor
          - condition: state
            entity_id: !input state_internal
            state: scan
          - condition: trigger
            id: ID_puertAb
        sequence:
          - action: input_select.select_option
            data:
              option: puertAbierta
            target:
              entity_id: !input state_internal
        alias: Scena_scan_a_puertAb

      - conditions: #Scena Apagar AA por tiempo de puertaAbierta
          - condition: trigger
            id: ID_puertAbTime
          - condition: and
            conditions:
              - condition: state
                entity_id: !input mode_puertAb
                state: "on"
              - condition: state
                entity_id: !input motion_sensor
                state: "off"
        sequence:
          - action: climate.turn_off
            # metadata: {}
            data: {}
            target:
              entity_id: !input target_climates
        alias: Scena_puertA_onTime_Off-AA

      - conditions: #Scena Apagar a libre
          - condition: trigger
            id: ID_apagar
        sequence:
          - action: input_select.select_option
            data:
              option: libre
            target:
              entity_id:
                - !input state_internal
                - !input state_plugin
          - if:
              - condition: state
                entity_id: !input mode_Setpointoff
                state: "off"
            then:
              - action: switch.turn_off
                target:
                  entity_id: !input target_switchesOn
                data: {}
              - action: switch.turn_off
                target:
                  entity_id: !input target_switchesOff
                data: {}
              - action: climate.turn_off
                data: {}
                target:
                  entity_id: !input target_climates
            alias: Modo SetPointOff
          - if:
              - condition: state
                entity_id: !input mode_Setpointoff
                state: "on"
            then:
              - action: switch.turn_off
                target:
                  entity_id: !input target_switchesOn
                data: {}
              - action: switch.turn_off
                target:
                  entity_id: !input target_switchesOff
                data: {}
              - action: climate.set_temperature
                data:
                  temperature: !input temperature_SetPointOff
                  hvac_mode: cool
                target:
                  entity_id: !input target_climates
              - action: climate.set_fan_mode
                data:
                  fan_mode: !input fanMode_SetPointOff
                target:
                  entity_id: !input target_climates
        alias: Scena_Apagar_a_libre
    default: []
    alias: Scenas_Plg_Habv1.3.2


mode: queued