# Blueprint para control unificado de ocupación y equipos en Home Assistant
blueprint:
  name: Bp-Plugin Aula v1.1
  description: Automatización para gestionar ocupación y Encender switches (On/Off) y termostatos en Home Assistant
  domain: automation
  input:
    # Selección de la entidad del sensor de movimiento
    motion_sensor:
      name: Sensor de Movimiento
      description: Sensor que detecta ocupación (switch que cambia de estado)
      selector:
        entity:
          domain: switch
    # Selección de los switches a Encender
    target_switchesOn:
      name: Switches a Encender
      description: Lista de switches que se encenderán/apagarán según ocupación
      selector:
        entity:
          domain: switch
          multiple: true
    # Selección de los switches solo a apagar
    target_switchesOff:
      name: Switches a Apagar
      description: Lista de switches que se apagarán según libre en ocupación
      selector:
        entity:
          domain: switch
          multiple: true
    # Selección de los termostatos a Encender
    target_climates:
      name: Termostatos a Encender
      description: Lista de termostatos que se configurarán según ocupación
      selector:
        entity:
          domain: climate
          multiple: true
    # Selección del input_select para estado del plugin
    state_plugin:
      name: Estado del Plugin
      description: Input Select para el estado del plugin (libre/ocupado)
      selector:
        entity:
          domain: input_select
    # Selección del input_select para estados internos
    state_internal:
      name: Estado Interno
      description: Input Select para los estados internos (libre/ocupado/scan)
      selector:
        entity:
          domain: input_select
    # Selección del input_select para el modo del plugin
    mode_plugin:
      name: Modo del Plugin
      description: Input Select para el modo del plugin (auto/Manual)
      selector:
        entity:
          domain: input_select
    # Selección del input_boolean para modo de activación
    mode_activation:
      name: Modo de Activación
      description: Input Boolean para habilitar/deshabilitar la activación de switches
      selector:
        entity:
          domain: input_boolean
    # Selección del input_boolean para modo de termostato
    mode_thermostat:
      name: Modo de Termostato
      description: Input Boolean para habilitar/deshabilitar el control del termostato
      selector:
        entity:
          domain: input_boolean
    # Temperatura objetivo para los termostatos
    target_temperature:
      name: Temperatura Objetivo
      description: Temperatura a establecer cuando los termostatos se encienden
      default: 24
      selector:
        number:
          min: 16
          max: 30
          unit_of_measurement: "°C"
    # Modo de ventilador para los termostatos
    fan_mode:
      name: Modo de Ventilador
      description: Modo de ventilador para los termostatos
      default: Auto low
      selector:
        select:
          options:
            - Auto low
            - Low
            - Medium
            - High
    # Tiempo de espera para apagar tras inactividad
    off_delay:
      name: Retardo para Apagar
      description: Tiempo de espera antes de apagar los equipos tras inactividad
      default: 15
      selector:
        number:
          min: 1
          max: 60
          unit_of_measurement: minutes
    # Tiempo de espera para apagar switches si están encendidos en estado libre
    switch_delay:
      name: Retardo de Switches
      description: Tiempo de espera antes de apagar switches si están encendidos en estado libre
      default: 10
      selector:
        number:
          min: 1
          max: 60
          unit_of_measurement: minutes

# Definición de los triggers
trigger:
  # Trigger cuando el sensor de movimiento se enciende
  - platform: state
    entity_id: !input motion_sensor
    from: "off"
    to: "on"
    id: encender
  # Trigger cuando el sensor de movimiento se apaga inmediatamente
  - platform: state
    entity_id: !input motion_sensor
    from: "on"
    to: "off"
    for:
      seconds: 0
    id: scaner
  # Trigger cuando el sensor de movimiento se apaga tras el retardo especificado
  - platform: state
    entity_id: !input motion_sensor
    from: "on"
    to: "off"
    for:
      minutes: !input off_delay
    id: apagar
  # Trigger cuando los switches se encienden por el tiempo especificado
  - platform: state
    entity_id: !input target_switchesOn
    from: "off"
    to: "on"
    for:
      minutes: !input switch_delay
    id: onSwitchDelay
  # Trigger cuando el estado del plugin cambia de libre a ocupado
  - platform: state
    entity_id: !input state_plugin
    from: libre
    to: ocupado
    id: plugin_ocupado
  # Trigger cuando el estado del plugin cambia de ocupado a libre
  - platform: state
    entity_id: !input state_plugin
    from: ocupado
    to: libre
    id: plugin_libre
  # Trigger cuando el estado interno cambia de libre a ocupado
  - platform: state
    entity_id: !input state_internal
    from: libre
    to: ocupado
    id: libre_ocupado
  # Trigger cuando el estado interno cambia de ocupado a scan
  - platform: state
    entity_id: !input state_internal
    from: ocupado
    to: scan
    id: ocupado_scan
  # Trigger cuando el estado interno cambia de scan a libre
  - platform: state
    entity_id: !input state_internal
    from: scan
    to: libre
    id: scan_libre

# Definición de las acciones
action:
  - choose:
      # Secuencia para encender equipos cuando se detecta ocupación
      - conditions:
          - condition: trigger
            id: encender
          - condition: state
            entity_id: !input state_internal
            state: libre
        sequence:
          # Cambiar estados a ocupado
          - service: input_select.select_option
            target:
              entity_id:
                - !input state_internal
                - !input state_plugin
            data:
              option: ocupado
          # Verificar si el modo del plugin es auto
          - condition: state
            entity_id: !input mode_plugin
            state: auto
          # Verificar si el modo de activación está encendido
          - condition: state
            entity_id: !input mode_activation
            state: "on"
          # Encender switches
          - service: switch.turn_on
            target:
              entity_id: !input target_switchesOn
          # Verificar si el modo termostato está encendido
          - condition: state
            entity_id: !input mode_thermostat
            state: "on"
          # Configurar temperatura del termostato
          - service: climate.set_temperature
            target:
              entity_id: !input target_climates
            data:
              temperature: !input target_temperature
              hvac_mode: cool
          # Configurar modo de ventilador
          - service: climate.set_fan_mode
            target:
              entity_id: !input target_climates
            data:
              fan_mode: !input fan_mode
        alias: Secuencia encender
      # Secuencia para cambiar a modo scan cuando el sensor se apaga
      - conditions:
          - condition: trigger
            id: scaner
          - condition: state
            entity_id: !input state_internal
            state: ocupado
        sequence:
          - service: input_select.select_option
            target:
              entity_id: !input state_internal
            data:
              option: scan
        alias: Secuencia ocupar
      # Secuencia para volver a ocupado desde scan al encender
      - conditions:
          - condition: trigger
            id: encender
          - condition: state
            entity_id: !input state_internal
            state: scan
        sequence:
          - service: input_select.select_option
            target:
              entity_id: !input state_internal
            data:
              option: ocupado
        alias: Secuencia scaner
      # Secuencia para apagar equipos tras el retardo de inactividad
      - conditions:
          - condition: trigger
            id: apagar
          - condition: state
            entity_id: !input state_internal
            state: scan
        sequence:
          # Cambiar estados a libre
          - service: input_select.select_option
            target:
              entity_id:
                - !input state_internal
                - !input state_plugin
            data:
              option: libre
          # Verificar si el modo del plugin es auto
          - condition: state
            entity_id: !input mode_plugin
            state: auto
          # Apagar switches
          - service: switch.turn_off
            target:
              entity_id: !input target_switchesOn
          - service: switch.turn_off
            target:
              entity_id: !input target_switchesOff
          # Apagar termostatos
          - service: climate.turn_off
            target:
              entity_id: !input target_climates
        alias: Secuencia apagar
      # Secuencia para apagar equipos si los switches están encendidos por el tiempo especificado en estado libre
      - conditions:
          - condition: trigger
            id: onSwitchDelay
          - condition: state
            entity_id: !input state_plugin
            state: libre
        sequence:
          # Verificar si el modo del plugin es auto
          - condition: state
            entity_id: !input mode_plugin
            state: auto
          # Apagar switches
          - service: switch.turn_off
            target:
              entity_id: !input target_switchesOn
          # Cambiar estados a libre
          - service: input_select.select_option
            target:
              entity_id:
                - !input state_internal
                - !input state_plugin
            data:
              option: libre
          # Apagar termostatos
          - service: climate.turn_off
            target:
              entity_id: !input target_climates
          # Retardo de 1 segundo
          - delay:
              seconds: 1
        alias: Secuencia sw-on en libre
      # Secuencia para apagar equipos cuando el plugin está en estado libre
      - conditions:
          - condition: trigger
            id: plugin_libre
          - condition: state
            entity_id: !input state_plugin
            state: libre
        sequence:
          # Verificar si el modo del plugin es auto
          - condition: state
            entity_id: !input mode_plugin
            state: auto
          # Apagar switches
          - service: switch.turn_off
            target:
              entity_id: !input target_switchesOn
          # Retardo de 1 segundo
          - delay:
              seconds: 1
          # Apagar termostatos (primera pasada)
          - service: climate.turn_off
            target:
              entity_id: !input target_climates
        alias: Secuencia apagado por web

mode: single

