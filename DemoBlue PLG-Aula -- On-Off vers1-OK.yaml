blueprint:
  name: Control de Ocupaci贸n - Aula
  description: Automatizaci贸n para controlar luces, climatizaci贸n y estados de ocupaci贸n basados en sensores y switches.
  domain: automation
  input:
    sensores_movimiento:
      name: Sensores de movimiento
      selector:
        entity:
          domain: sensor
          multiple: true

    switch_disparador:
      name: Switch para escaneo
      selector:
        entity:
          domain: switch

    luces_controladas:
      name: Luces para controlar
      selector:
        entity:
          domain: light
          multiple: true

    termostatos:
      name: Termostatos a controlar
      selector:
        entity:
          domain: climate
          multiple: true

    estado_interno:
      name: Input Select - Estado Interno
      selector:
        entity:
          domain: input_select

    estado_plugin:
      name: Input Select - Estado Plugin
      selector:
        entity:
          domain: input_select

trigger:
  - platform: state
    entity_id: !input sensores_movimiento
    from: "0.0"
    to: "1.0"
    for:
      seconds: 1
    id: encender

  - platform: state
    entity_id: !input sensores_movimiento
    from: "1.0"
    to: "0.0"
    for:
      seconds: 0
    id: scaner

  - platform: state
    entity_id: !input sensores_movimiento
    from: "1.0"
    to: "0.0"
    for:
      minutes: 2
    id: apagar

  - platform: state
    entity_id: !input switch_disparador
    from: "off"
    to: "on"
    for:
      seconds: 10
    id: scaner

condition: []

action:
  - choose:
      - conditions:
          - condition: trigger
            id: encender
          - condition: state
            entity_id: !input estado_interno
            state: "libre"
        sequence:
          - service: input_select.select_option
            data:
              option: "ocupado"
            target:
              entity_id:
                - !input estado_interno
                - !input estado_plugin

          - repeat:
              for_each: !input luces_controladas
              sequence:
                - service: light.turn_on
                  target:
                    entity_id: "{{ repeat.item }}"

          - repeat:
              for_each: !input termostatos
              sequence:
                - service: climate.turn_on
                  target:
                    entity_id: "{{ repeat.item }}"

                - service: climate.set_temperature
                  data:
                    temperature: 24
                    hvac_mode: cool
                  target:
                    entity_id: "{{ repeat.item }}"

                - service: climate.set_fan_mode
                  data:
                    fan_mode: "Auto low"
                  target:
                    entity_id: "{{ repeat.item }}"

      - conditions:
          - condition: trigger
            id: scaner
          - condition: state
            entity_id: !input estado_interno
            state: "ocupado"
        sequence:
          - service: input_select.select_option
            data:
              option: "scan"
            target:
              entity_id: !input estado_interno

      - conditions:
          - condition: trigger
            id: encender
          - condition: state
            entity_id: !input estado_interno
            state: "scan"
        sequence:
          - service: input_select.select_option
            data:
              option: "ocupado"
            target:
              entity_id: !input estado_interno

      - conditions:
          - condition: trigger
            id: apagar
          - condition: state
            entity_id: !input estado_interno
            state: "scan"
        sequence:
          - service: input_select.select_option
            data:
              option: "libre"
            target:
              entity_id:
                - !input estado_interno
                - !input estado_plugin

          - repeat:
              for_each: !input luces_controladas
              sequence:
                - service: light.turn_off
                  target:
                    entity_id: "{{ repeat.item }}"

          - repeat:
              for_each: !input termostatos
              sequence:
                - service: climate.turn_off
                  target:
                    entity_id: "{{ repeat.item }}"

      - conditions:
          - condition: trigger
            id: scaner
          - condition: state
            entity_id: !input estado_plugin
            state: "libre"
        sequence:
          - service: switch.turn_off
            target:
              entity_id: !input switch_disparador

mode: single
