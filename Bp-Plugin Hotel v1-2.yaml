blueprint:
  name: Bp-Plugin Hotel v1.2
  description: Automatización para gestionar ocupación y encender/apagar switches y termostatos en Home Assistant
  domain: automation
  input:
    door_sensor: #Sensor de Puerta
      name: Sensor de Puerta
      description: Sensor que detecta la apertura/cierre de la puerta
      selector:
        entity:
          domain: binary_sensor
          multiple: true
    motion_sensor: #Sensor de Movimiento
      name: Sensor de Movimiento
      description: Sensor que detecta movimiento para determinar ocupación
      selector:
        entity:
          domain: binary_sensor
          multiple: true
    target_switchesOn: #Actuadores a Encender
      name: Switches a Encender
      description: Lista de switches que se encenderán/apagarán según ocupación
      default: []
      selector:
        entity:
          domain: switch
          multiple: true
    target_switchesOff: #Actuadores a Apagar
      name: Switches a Apagar
      description: Lista de switches que se apagarán cuando el estado sea libre
      default: []
      selector:
        entity:
          domain: switch
          multiple: true
    target_climates: #Termostatos a Encender
      name: Termostatos a Encender
      description: Lista de termostatos que se configurarán según ocupación
      default: []
      selector:
        entity:
          domain: climate
          multiple: true
    state_plugin: #Estado del Plugin
      name: Estado del Plugin
      description: Input Select para el estado del plugin (libre/ocupado). Debe tener opciones 'libre' y 'ocupado'.
      selector:
        entity:
          domain: input_select
    state_internal:
      name: Estado Interno
      description: Input Select para los estadoas internos (libre/ocupado/scan/puertAbierta). Debe tener estas opciones.
      selector:
        entity:
          domain: input_select
    mode_plugin:
      name: Modo del Plugin
      description: Input Select para el modo del plugin (auto/manual). Debe tener opciones 'auto' y 'manual'.
      selector:
        entity:
          domain: input_select
    mode_activation:
      name: Modo de Activación
      description: Input Boolean para habilitar/deshabilitar la activación de switches
      selector:
        entity:
          domain: input_boolean
    mode_thermostat:
      name: Modo de Termostato
      description: Input Boolean para habilitar/deshabilitar el control del termostato
      selector:
        entity:
          domain: input_boolean
    target_temperature:
      name: Temperatura Objetivo
      description: Temperatura a establecer cuando los termostatos se encienden
      default: 24
      selector:
        number:
          min: 16
          max: 30
          unit_of_measurement: "°C"
    fan_mode:
      name: Modo de Ventilador
      description: Modo de ventilador para los termostatos
      default: Auto low
      selector:
        select:
          options:
            - Auto low
            - Low
            - Medium
            - High
    off_delay:
      name: Retardo para Apagar
      description: Tiempo de espera antes de apagar los equipos tras inactividad
      default: 15
      selector:
        number:
          min: 1
          max: 60
          unit_of_measurement: minutes
    scan_delay:
      name: Retardo de Scan al SM
      description: Tiempo de espera para escanear si el sensor de movimiento está activo
      default: 3
      selector:
        number:
          min: 1
          max: 60
          unit_of_measurement: minutes
    switch_delay:
      name: Retardo de Switches
      description: Tiempo de espera antes de apagar switches si están encendidos en estado libre
      default: 10
      selector:
        number:
          min: 1
          max: 60
          unit_of_measurement: minutes

variables:
  off_delay: !input off_delay
  switch_delay: !input switch_delay
  scan_delay: !input scan_delay

trigger:
- trigger: state #Door Open
    entity_id: !input door_sensor
    to: "on"
    id: ID_puertAb
  
- trigger: state #Door Closer
    entity_id: !input door_sensor
    to: "off"
    id: ID_scan
  
- trigger: state #Motion On
    entity_id: !input motion_sensor
    to: "on"
    id: ID_ocupado
  
- trigger: state #Stados internos Scan
    entity_id: !input state_internal
    to: scan
    for:
      minutes: !input scan_delay
    id: ID_ocupadoSM
  
- trigger: state #Estados Internos Scan tiempo = (off_delay)
    entity_id: !input state_internal
    to: scan
    for:
      minutes: !input off_delay
    id: ID_apagar
    from: puertAbierta
  
- trigger: state #Estados Internos Scan tiempo = (switch_delay) accionado por sw On/off
    entity_id: !input state_internal
    to: scan
    for:
      minutes: !input switch_delay
    id: ID_apagar
    from: libre
  
- trigger: state #Estados del plugin pasa de ocupado a libre >> apagar todo (Web)
    entity_id: !input state_plugin
    from: ocupado
    to: libre
    id: ID_apagar
  
- trigger: state #Sw on/off de libre a scan
    entity_id: !input target_switchesOn
    from: "off"
    to: "on"
    for:
      seconds: 2
    id: ID_SwOn

condition: []

action:
  - choose:
      - conditions: #Scena Encender SDoor libre a ocup
          - condition: state
            entity_id: !input state_plugin
            state: libre
          - condition: trigger
            id: ID_puertAb
        sequence:
          - action: input_select.select_option
            data:
              option: puertAbierta
            target:
              entity_id: !input state_internal
          - action: input_select.select_option
            data:
              option: ocupado
            target:
              entity_id: !input state_plugin
          - if: #si mode_plugin = auto >> All = ON
              - condition: state
                entity_id: !input mode_plugin
                state: auto
            then:
              - if: #si mode_activation = ON >> SW = ON
                  - condition: state
                    entity_id: !input mode_activation
                    state: "on"
                then:
                  - action: switch.turn_on
                    target:
                      entity_id: !input target_switchesOn
              - if: #si mode_thermostat = ON >> thermostat = ON
                  - condition: state
                    entity_id: !input mode_thermostat
                    state: "on"
                then:
                  - action: climate.set_temperature
                    data:
                      hvac_mode: cool
                      temperature: !input target_temperature
                      fan_mode: !input fan_mode
                    target:
                      entity_id: !input target_climates
        alias: Scena_Encender_SDoor_libre_a_ocup

      - conditions: #Scena Encender SMov libre a scan
          - condition: state
            entity_id: !input state_internal
            state: libre
          - condition: trigger
            id: ID_ocupado
        sequence:
          - action: input_select.select_option
            data:
              option: scan
            target:
              entity_id: !input state_internal
          - action: input_select.select_option
            data:
              option: ocupado
            target:
              entity_id: !input state_plugin
          - if: #si mode_plugin = auto >> All = ON
              - condition: state
                entity_id: !input mode_plugin
                state: auto
            then:
              - if: #si mode_activation = on >> swOn = ON
                  - condition: state
                    entity_id: !input mode_activation
                    state: "on"
                then:
                  - action: switch.turn_on
                    target:
                      entity_id: !input target_switchesOn
              - if: #si mode_thermostat = ON >> thermostat = ON
                  - condition: state
                    entity_id: !input mode_thermostat
                    state: "on"
                then:
                  - action: climate.set_temperature
                    data:
                      hvac_mode: cool
                      temperature: !input target_temperature
                      fan_mode: !input fan_mode
                    target:
                      entity_id: !input target_climates
        alias: Scena_Encender_SMov_libre_a_scan

      - conditions: #Scena SW libre a scan
          - condition: state
            entity_id: !input state_plugin
            state: libre
          - condition: trigger
            id: ID_SwOn
        sequence:
          - action: input_select.select_option
            data:
              option: scan
            target:
              entity_id: !input state_internal
          - action: input_select.select_option
            data:
              option: ocupado
            target:
              entity_id: !input state_plugin
        alias: Scena_SW_libre_a_scan

      - conditions: #Scena puertAb a scan
          - condition: state
            entity_id: !input state_internal
            state: puertAbierta
          - condition: trigger
            id: ID_scan
        sequence:
          - action: input_select.select_option
            data:
              option: scan
            target:
              entity_id: !input state_internal
        alias: Scena_puertAb_a_scan

      - conditions: #Scena scan a ocup
          - condition: state
            entity_id: !input state_internal
            state: scan
          - condition: trigger
            id: ID_ocupado
        sequence:
          - action: input_select.select_option
            data:
              option: ocupado
            target:
              entity_id: !input state_internal
        alias: Scena_scan_a_ocup

      - conditions: #Scena SMtimer scan a ocup
          - condition: trigger
            id: ID_ocupadoSM
          - condition: state
            entity_id: !input motion_sensor
            state: "on"
        sequence:
          - action: input_select.select_option
            data:
              option: ocupado
            target:
              entity_id: !input state_internal
        alias: Scena_SMtimer_scan_a_ocup

      - conditions: #Scena ocup a puertAb by SDoor
          - condition: state
            entity_id: !input state_internal
            state: ocupado
          - condition: trigger
            id: ID_puertAb
        sequence:
          - action: input_select.select_option
            data:
              option: puertAbierta
            target:
              entity_id: !input state_internal
        alias: Scena_ocup_a_puertAb

      - conditions: #Scena scan a puertAb by SDoor
          - condition: state
            entity_id: !input state_internal
            state: scan
          - condition: trigger
            id: ID_puertAb
        sequence:
          - action: input_select.select_option
            data:
              option: puertAbierta
            target:
              entity_id: !input state_internal
        alias: Scena_scan_a_puertAb

      - conditions: #Scena Apagar a libre
          - condition: trigger
            id: ID_apagar
        sequence:
          - action: input_select.select_option
            data:
              option: libre
            target:
              entity_id:
                - !input state_internal
                - !input state_plugin
          - if: #Si mode_plugin == on >> All Off
              - condition: state
                entity_id: !input mode_plugin
                state: auto
            then:
              - action: switch.turn_off
                target:
                  entity_id:
                    - !input target_switchesOn
                    - !input target_switchesOff
              - action: climate.set_hvac_mode
                data:
                  hvac_mode: "off"
                target:
                  entity_id: !input target_climates
        alias: Scena_Apagar_a_libre
    default: []
    alias: No_action_if_no_conditions_match


mode: queued


